name: GD-Posix-Apps Build/test CI
on:
  push:
    branches: [ main ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main ]

jobs:
  linux-build:
    name: Build and test on ${{ matrix.os }}
    runs-on: ${{ matrix. os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Configure
      run: |
        sudo apt install ninja-build
        mkdir -p "${GITHUB_WORKSPACE}/build"
        cmake -S "${GITHUB_WORKSPACE}" -B "${GITHUB_WORKSPACE}/build" -G Ninja -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo
    - name: Build
      run: cmake --build "${GITHUB_WORKSPACE}/build" --config RelWithDebInfo
    - name: Test
      run: |
        cd "${GITHUB_WORKSPACE}/build"
        ctest

  macos-build:
    name: Build and test on ${{ matrix.os }}
    runs-on: ${{ matrix. os }}
    strategy:
      matrix:
        os: [macos-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Configure
      run: |
        brew install ninja
        mkdir -p "${GITHUB_WORKSPACE}/build"
        cmake -S "${GITHUB_WORKSPACE}" -B "${GITHUB_WORKSPACE}/build" -G Ninja -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo
    - name: Build
      run: ninja -C "${GITHUB_WORKSPACE}/build"
    - name: Test
      run: ninja -C "${GITHUB_WORKSPACE}/build" test

  windows-build:
    name: Build and test on ${{ matrix.os }}
    runs-on: ${{ matrix. os }}
    strategy:
      matrix:
        os: [windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Configure
      run: |
        cmake -S "$Env:GITHUB_WORKSPACE" -B "$Env:GITHUB_WORKSPACE\\build" -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo
    - name: Build
      run: cmake --build "$Env:GITHUB_WORKSPACE\\build" --config RelWithDebInfo
    - name: Test
      run: cmake --build "$Env:GITHUB_WORKSPACE\\build" --config RelWithDebInfo  --target RUN_TESTS

